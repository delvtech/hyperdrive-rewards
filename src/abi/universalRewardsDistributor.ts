export const universalRewardsDistributorAbi = {
    abi: [
        {
            type: "constructor",
            inputs: [
                {
                    name: "initialOwner",
                    type: "address",
                    internalType: "address",
                },
                {
                    name: "initialTimelock",
                    type: "uint256",
                    internalType: "uint256",
                },
                {
                    name: "initialRoot",
                    type: "bytes32",
                    internalType: "bytes32",
                },
                {
                    name: "initialIpfsHash",
                    type: "bytes32",
                    internalType: "bytes32",
                },
            ],
            stateMutability: "nonpayable",
        },
        {
            type: "function",
            name: "acceptRoot",
            inputs: [],
            outputs: [],
            stateMutability: "nonpayable",
        },
        {
            type: "function",
            name: "claim",
            inputs: [
                { name: "account", type: "address", internalType: "address" },
                { name: "reward", type: "address", internalType: "address" },
                { name: "claimable", type: "uint256", internalType: "uint256" },
                { name: "proof", type: "bytes32[]", internalType: "bytes32[]" },
            ],
            outputs: [
                { name: "amount", type: "uint256", internalType: "uint256" },
            ],
            stateMutability: "nonpayable",
        },
        {
            type: "function",
            name: "claimed",
            inputs: [
                { name: "account", type: "address", internalType: "address" },
                { name: "reward", type: "address", internalType: "address" },
            ],
            outputs: [
                { name: "amount", type: "uint256", internalType: "uint256" },
            ],
            stateMutability: "view",
        },
        {
            type: "function",
            name: "ipfsHash",
            inputs: [],
            outputs: [{ name: "", type: "bytes32", internalType: "bytes32" }],
            stateMutability: "view",
        },
        {
            type: "function",
            name: "isUpdater",
            inputs: [{ name: "", type: "address", internalType: "address" }],
            outputs: [{ name: "", type: "bool", internalType: "bool" }],
            stateMutability: "view",
        },
        {
            type: "function",
            name: "owner",
            inputs: [],
            outputs: [{ name: "", type: "address", internalType: "address" }],
            stateMutability: "view",
        },
        {
            type: "function",
            name: "pendingRoot",
            inputs: [],
            outputs: [
                { name: "root", type: "bytes32", internalType: "bytes32" },
                { name: "ipfsHash", type: "bytes32", internalType: "bytes32" },
                { name: "validAt", type: "uint256", internalType: "uint256" },
            ],
            stateMutability: "view",
        },
        {
            type: "function",
            name: "revokePendingRoot",
            inputs: [],
            outputs: [],
            stateMutability: "nonpayable",
        },
        {
            type: "function",
            name: "root",
            inputs: [],
            outputs: [{ name: "", type: "bytes32", internalType: "bytes32" }],
            stateMutability: "view",
        },
        {
            type: "function",
            name: "setOwner",
            inputs: [
                { name: "newOwner", type: "address", internalType: "address" },
            ],
            outputs: [],
            stateMutability: "nonpayable",
        },
        {
            type: "function",
            name: "setRoot",
            inputs: [
                { name: "newRoot", type: "bytes32", internalType: "bytes32" },
                {
                    name: "newIpfsHash",
                    type: "bytes32",
                    internalType: "bytes32",
                },
            ],
            outputs: [],
            stateMutability: "nonpayable",
        },
        {
            type: "function",
            name: "setRootUpdater",
            inputs: [
                { name: "updater", type: "address", internalType: "address" },
                { name: "active", type: "bool", internalType: "bool" },
            ],
            outputs: [],
            stateMutability: "nonpayable",
        },
        {
            type: "function",
            name: "setTimelock",
            inputs: [
                {
                    name: "newTimelock",
                    type: "uint256",
                    internalType: "uint256",
                },
            ],
            outputs: [],
            stateMutability: "nonpayable",
        },
        {
            type: "function",
            name: "submitRoot",
            inputs: [
                { name: "newRoot", type: "bytes32", internalType: "bytes32" },
                {
                    name: "newIpfsHash",
                    type: "bytes32",
                    internalType: "bytes32",
                },
            ],
            outputs: [],
            stateMutability: "nonpayable",
        },
        {
            type: "function",
            name: "timelock",
            inputs: [],
            outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
            stateMutability: "view",
        },
    ],
    bytecode: {
        object: "",
        sourceMap:
            "929:7483:30:-:0;;;2866:232;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2981:23;2991:12;2981:9;;;:23;;:::i;:::-;3014:29;3027:15;3014:12;;;:29;;:::i;:::-;3053:38;3062:11;3075:15;3053:8;;;:38;;:::i;:::-;2866:232;;;;929:7483;;8089:123;8153:8;8145:5;;:16;;;;;;;;;;;;;;;;;;8196:8;8177:28;;;;;;;;;;;;8089:123;:::o;8269:141::-;8342:11;8331:8;:22;;;;8369:34;8391:11;8369:34;;;;;;:::i;:::-;;;;;;;;8269:141;:::o;7806:212::-;7888:7;7881:4;:14;;;;7916:11;7905:8;:22;;;;7945:11;;7938:18;;;;;;;;;;;;;;;;;;;;7999:11;7990:7;7972:39;;;;;;;;;;7806:212;;:::o;88:117:36:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:77::-;882:7;911:5;900:16;;845:77;;;:::o;928:122::-;1001:24;1019:5;1001:24;:::i;:::-;994:5;991:35;981:63;;1040:1;1037;1030:12;981:63;928:122;:::o;1056:143::-;1113:5;1144:6;1138:13;1129:22;;1160:33;1187:5;1160:33;:::i;:::-;1056:143;;;;:::o;1205:77::-;1242:7;1271:5;1260:16;;1205:77;;;:::o;1288:122::-;1361:24;1379:5;1361:24;:::i;:::-;1354:5;1351:35;1341:63;;1400:1;1397;1390:12;1341:63;1288:122;:::o;1416:143::-;1473:5;1504:6;1498:13;1489:22;;1520:33;1547:5;1520:33;:::i;:::-;1416:143;;;;:::o;1565:820::-;1662:6;1670;1678;1686;1735:3;1723:9;1714:7;1710:23;1706:33;1703:120;;;1742:79;;:::i;:::-;1703:120;1862:1;1887:64;1943:7;1934:6;1923:9;1919:22;1887:64;:::i;:::-;1877:74;;1833:128;2000:2;2026:64;2082:7;2073:6;2062:9;2058:22;2026:64;:::i;:::-;2016:74;;1971:129;2139:2;2165:64;2221:7;2212:6;2201:9;2197:22;2165:64;:::i;:::-;2155:74;;2110:129;2278:2;2304:64;2360:7;2351:6;2340:9;2336:22;2304:64;:::i;:::-;2294:74;;2249:129;1565:820;;;;;;;:::o;2391:118::-;2478:24;2496:5;2478:24;:::i;:::-;2473:3;2466:37;2391:118;;:::o;2515:222::-;2608:4;2646:2;2635:9;2631:18;2623:26;;2659:71;2727:1;2716:9;2712:17;2703:6;2659:71;:::i;:::-;2515:222;;;;:::o;929:7483:30:-;;;;;;;",
        linkReferences: {},
    },
    deployedBytecode: {
        object: "0x608060405234801561001057600080fd5b50600436106100f55760003560e01c8063750588cf11610097578063d61825ef11610066578063d61825ef1461024e578063ebf0c7171461026a578063ed075ec514610288578063fabed41214610292576100f5565b8063750588cf146101d45780638da5cb5b146101f4578063c623674f14610212578063d33219b414610230576100f5565b806342af83fb116100d357806342af83fb146101625780634b3870531461017e5780634fdfb0861461018857806353739410146101b8576100f5565b80630c9cbf0e146100fa57806313af40351461012a5780631e891c0a14610146575b600080fd5b610114600480360381019061010f91906119be565b6102c2565b6040516101219190611a17565b60405180910390f35b610144600480360381019061013f9190611a32565b6102e7565b005b610160600480360381019061015b9190611a8b565b610486565b005b61017c60048036038101906101779190611aee565b6105d9565b005b610186610865565b005b6101a2600480360381019061019d9190611a32565b610a66565b6040516101af9190611b49565b60405180910390f35b6101d260048036038101906101cd9190611b90565b610a86565b005b6101dc610cc4565b6040516101eb93929190611bdf565b60405180910390f35b6101fc610cdc565b6040516102099190611c25565b60405180910390f35b61021a610d02565b6040516102279190611c40565b60405180910390f35b610238610d08565b6040516102459190611a17565b60405180910390f35b61026860048036038101906102639190611aee565b610d0e565b005b610272610f50565b60405161027f9190611c40565b60405180910390f35b610290610f56565b005b6102ac60048036038101906102a79190611cc0565b61106f565b6040516102b99190611a17565b60405180910390f35b6002602052816000526040600020602052806000526040600020600091509150505481565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146040518060400160405280601781526020017f63616c6c6572206973206e6f7420746865206f776e6572000000000000000000815250906103af576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103a69190611dd8565b60405180910390fd5b50600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156040518060400160405280600b81526020017f616c72656164792073657400000000000000000000000000000000000000000081525090610479576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104709190611dd8565b60405180910390fd5b5061048381611463565b50565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146040518060400160405280601781526020017f63616c6c6572206973206e6f7420746865206f776e65720000000000000000008152509061054e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105459190611dd8565b60405180910390fd5b506005548114156040518060400160405280600b81526020017f616c726561647920736574000000000000000000000000000000000000000000815250906105cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105c39190611dd8565b60405180910390fd5b506105d6816114ea565b50565b600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff168061067e5750600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b6040518060400160405280601f81526020017f63616c6c657220686173206e6f7420746865207570646174657220726f6c6500815250906106f5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106ec9190611dd8565b60405180910390fd5b506000548214158061070957506001548114155b6040518060400160405280600b81526020017f616c72656164792073657400000000000000000000000000000000000000000081525090610780576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107779190611dd8565b60405180910390fd5b50600060055414806107df5750600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b6040518060400160405280601f81526020017f756e617574686f72697a656420746f206368616e67652074686520726f6f740081525090610856576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161084d9190611dd8565b60405180910390fd5b50610861828261152b565b5050565b600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff168061090a5750600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b6040518060400160405280601f81526020017f63616c6c657220686173206e6f7420746865207570646174657220726f6c650081525090610981576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109789190611dd8565b60405180910390fd5b50600060066002015414156040518060400160405280600f81526020017f6e6f2070656e64696e6720726f6f74000000000000000000000000000000000081525090610a03576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109fa9190611dd8565b60405180910390fd5b5060066000808201600090556001820160009055600282016000905550503373ffffffffffffffffffffffffffffffffffffffff167ffc5bc87b2339664e063f6f7cd154075756d9c3b2c38ca2b950fef2f8b3f6dc4060405160405180910390a2565b60046020528060005260406000206000915054906101000a900460ff1681565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146040518060400160405280601781526020017f63616c6c6572206973206e6f7420746865206f776e657200000000000000000081525090610b4e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b459190611dd8565b60405180910390fd5b50801515600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151514156040518060400160405280600b81526020017f616c72656164792073657400000000000000000000000000000000000000000081525090610c1a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c119190611dd8565b60405180910390fd5b5080600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff167fefa819ca5209d17f1dfd20e7c0c2100700ae10239d28140f00fa620742b2d84282604051610cb89190611b49565b60405180910390a25050565b60068060000154908060010154908060020154905083565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60015481565b60055481565b600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1680610db35750600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b6040518060400160405280601f81526020017f63616c6c657220686173206e6f7420746865207570646174657220726f6c650081525090610e2a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e219190611dd8565b60405180910390fd5b5060066000015482141580610e4457506006600101548114155b6040518060400160405280600f81526020017f616c72656164792070656e64696e67000000000000000000000000000000000081525090610ebb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610eb29190611dd8565b60405180910390fd5b50604051806060016040528083815260200182815260200160055442610ee19190611e29565b815250600660008201518160000155602082015181600101556040820151816002015590505080823373ffffffffffffffffffffffffffffffffffffffff167f922a2513428e5d51dd666942f04a14788d1db1ab35373059a8a29f025d6342cb60405160405180910390a45050565b60005481565b600060066002015414156040518060400160405280600f81526020017f6e6f2070656e64696e6720726f6f74000000000000000000000000000000000081525090610fd7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fce9190611dd8565b60405180910390fd5b506006600201544210156040518060400160405280601781526020017f74696d656c6f636b206973206e6f74206578706972656400000000000000000081525090611058576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161104f9190611dd8565b60405180910390fd5b5061106d60066000015460066001015461152b565b565b60008060001b60005414156040518060400160405280600f81526020017f726f6f74206973206e6f74207365740000000000000000000000000000000000815250906110f1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110e89190611dd8565b60405180910390fd5b50611150838360005489898960405160200161110f93929190611e5d565b604051602081830303815290604052805190602001206040516020016111359190611eb5565b60405160208183030381529060405280519060200120611588565b6040518060400160405280601881526020017f696e76616c69642070726f6f66206f7220657870697265640000000000000000815250906111c7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111be9190611dd8565b60405180910390fd5b50600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205484116040518060400160405280601181526020017f636c61696d61626c6520746f6f206c6f77000000000000000000000000000000815250906112be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112b59190611dd8565b60405180910390fd5b50600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054846113479190611ed0565b905083600260008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506113f586828773ffffffffffffffffffffffffffffffffffffffff166115a19092919063ffffffff16565b8473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff167ff7a40077ff7a04c7e61f6f26fb13774259ddf1b6bce9ecf26a8276cdd3992683836040516114529190611a17565b60405180910390a395945050505050565b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff167f50146d0e3c60aa1d17a70635b05494f864e86144a2201275021014fbf08bafe260405160405180910390a250565b806005819055507f980b903efea70e6b1bd235b1fb05f1a5da73cbd478b73c9538053f9eb29f129f816040516115209190611a17565b60405180910390a150565b8160008190555080600181905550600660008082016000905560018201600090556002820160009055505080827f901232fc92ac16700a7d4b60706cbd27dec177bc85c9c2dbd2e2871d63b22a2360405160405180910390a35050565b600082611596868685611627565b149050949350505050565b6116228363a9059cbb60e01b84846040516024016115c0929190611f04565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061167f565b505050565b60008082905060005b858590508110156116735761165e8287878481811061165257611651611f2d565b5b90506020020135611747565b9150808061166b90611f5c565b915050611630565b50809150509392505050565b60006116e1826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166117729092919063ffffffff16565b90506000815114806117035750808060200190518101906117029190611fb9565b5b611742576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161173990612058565b60405180910390fd5b505050565b600081831061175f5761175a828461178a565b61176a565b611769838361178a565b5b905092915050565b606061178184846000856117a1565b90509392505050565b600082600052816020526040600020905092915050565b6060824710156117e6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117dd906120ea565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff16858760405161180f9190612151565b60006040518083038185875af1925050503d806000811461184c576040519150601f19603f3d011682016040523d82523d6000602084013e611851565b606091505b50915091506118628783838761186e565b92505050949350505050565b606083156118d05760008351036118c857611888856118e3565b6118c7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118be906121b4565b60405180910390fd5b5b8290506118db565b6118da8383611906565b5b949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6000825111156119195781518083602001fd5b806040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161194d9190611dd8565b60405180910390fd5b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061198b82611960565b9050919050565b61199b81611980565b81146119a657600080fd5b50565b6000813590506119b881611992565b92915050565b600080604083850312156119d5576119d4611956565b5b60006119e3858286016119a9565b92505060206119f4858286016119a9565b9150509250929050565b6000819050919050565b611a11816119fe565b82525050565b6000602082019050611a2c6000830184611a08565b92915050565b600060208284031215611a4857611a47611956565b5b6000611a56848285016119a9565b91505092915050565b611a68816119fe565b8114611a7357600080fd5b50565b600081359050611a8581611a5f565b92915050565b600060208284031215611aa157611aa0611956565b5b6000611aaf84828501611a76565b91505092915050565b6000819050919050565b611acb81611ab8565b8114611ad657600080fd5b50565b600081359050611ae881611ac2565b92915050565b60008060408385031215611b0557611b04611956565b5b6000611b1385828601611ad9565b9250506020611b2485828601611ad9565b9150509250929050565b60008115159050919050565b611b4381611b2e565b82525050565b6000602082019050611b5e6000830184611b3a565b92915050565b611b6d81611b2e565b8114611b7857600080fd5b50565b600081359050611b8a81611b64565b92915050565b60008060408385031215611ba757611ba6611956565b5b6000611bb5858286016119a9565b9250506020611bc685828601611b7b565b9150509250929050565b611bd981611ab8565b82525050565b6000606082019050611bf46000830186611bd0565b611c016020830185611bd0565b611c0e6040830184611a08565b949350505050565b611c1f81611980565b82525050565b6000602082019050611c3a6000830184611c16565b92915050565b6000602082019050611c556000830184611bd0565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f840112611c8057611c7f611c5b565b5b8235905067ffffffffffffffff811115611c9d57611c9c611c60565b5b602083019150836020820283011115611cb957611cb8611c65565b5b9250929050565b600080600080600060808688031215611cdc57611cdb611956565b5b6000611cea888289016119a9565b9550506020611cfb888289016119a9565b9450506040611d0c88828901611a76565b935050606086013567ffffffffffffffff811115611d2d57611d2c61195b565b5b611d3988828901611c6a565b92509250509295509295909350565b600081519050919050565b600082825260208201905092915050565b60005b83811015611d82578082015181840152602081019050611d67565b60008484015250505050565b6000601f19601f8301169050919050565b6000611daa82611d48565b611db48185611d53565b9350611dc4818560208601611d64565b611dcd81611d8e565b840191505092915050565b60006020820190508181036000830152611df28184611d9f565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611e34826119fe565b9150611e3f836119fe565b9250828201905080821115611e5757611e56611dfa565b5b92915050565b6000606082019050611e726000830186611c16565b611e7f6020830185611c16565b611e8c6040830184611a08565b949350505050565b6000819050919050565b611eaf611eaa82611ab8565b611e94565b82525050565b6000611ec18284611e9e565b60208201915081905092915050565b6000611edb826119fe565b9150611ee6836119fe565b9250828203905081811115611efe57611efd611dfa565b5b92915050565b6000604082019050611f196000830185611c16565b611f266020830184611a08565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000611f67826119fe565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611f9957611f98611dfa565b5b600182019050919050565b600081519050611fb381611b64565b92915050565b600060208284031215611fcf57611fce611956565b5b6000611fdd84828501611fa4565b91505092915050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b6000612042602a83611d53565b915061204d82611fe6565b604082019050919050565b6000602082019050818103600083015261207181612035565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b60006120d4602683611d53565b91506120df82612078565b604082019050919050565b60006020820190508181036000830152612103816120c7565b9050919050565b600081519050919050565b600081905092915050565b600061212b8261210a565b6121358185612115565b9350612145818560208601611d64565b80840191505092915050565b600061215d8284612120565b915081905092915050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b600061219e601d83611d53565b91506121a982612168565b602082019050919050565b600060208201905081810360008301526121cd81612191565b905091905056fea2646970667358221220a4599bf6dcc55ec4df40bc71169db0426e0a4292f0497e425c3c14d35059fe1664736f6c63430008130033",
        sourceMap:
            "929:7483:30:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1360:84;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7435:151;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6750:169;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6176:303;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4376:216;;;:::i;:::-;;1633:41;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7116:245;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1986:30;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;1543:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1253:23;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1735;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3406:389;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1122:19;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3989:256;;;:::i;:::-;;5001:750;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1360:84;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7435:151::-;2153:5;;;;;;;;;;;2139:19;;:10;:19;;;2160;;;;;;;;;;;;;;;;;2131:49;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;7520:5:::1;;;;;;;;;;;7508:17;;:8;:17;;;;7527:21;;;;;;;;;;;;;;;;::::0;7500:49:::1;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;7560:19;7570:8;7560:9;:19::i;:::-;7435:151:::0;:::o;6750:169::-;2153:5;;;;;;;;;;;2139:19;;:10;:19;;;2160;;;;;;;;;;;;;;;;;2131:49;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;6844:8:::1;;6829:11;:23;;6854:21;;;;;;;;;;;;;;;;::::0;6821:55:::1;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;6887:25;6900:11;6887:12;:25::i;:::-;6750:169:::0;:::o;6176:303::-;2313:9;:21;2323:10;2313:21;;;;;;;;;;;;;;;;;;;;;;;;;:44;;;;2352:5;;;;;;;;;;;2338:19;;:10;:19;;;2313:44;2359:26;;;;;;;;;;;;;;;;;2305:81;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;6285:4:::1;;6274:7;:15;;:42;;;;6308:8;;6293:11;:23;;6274:42;6318:21;;;;;;;;;;;;;;;;::::0;6266:74:::1;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;6370:1;6358:8;;:13;:36;;;;6389:5;;;;;;;;;;;6375:19;;:10;:19;;;6358:36;6396:34;;;;;;;;;;;;;;;;::::0;6350:81:::1;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;6442:30;6451:7;6460:11;6442:8;:30::i;:::-;6176:303:::0;;:::o;4376:216::-;2313:9;:21;2323:10;2313:21;;;;;;;;;;;;;;;;;;;;;;;;;:44;;;;2352:5;;;;;;;;;;;2338:19;;:10;:19;;;2313:44;2359:26;;;;;;;;;;;;;;;;;2305:81;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;4471:1:::1;4448:11;:19;;;:24;;4474:25;;;;;;;;;;;;;;;;::::0;4440:60:::1;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;4518:11;;4511:18:::0;::::1;;;;;;;;;;;;;;;;;;;4574:10;4545:40;;;;;;;;;;;;4376:216::o:0;1633:41::-;;;;;;;;;;;;;;;;;;;;;;:::o;7116:245::-;2153:5;;;;;;;;;;;2139:19;;:10;:19;;;2160;;;;;;;;;;;;;;;;;2131:49;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;7229:6:::1;7207:28;;:9;:18;7217:7;7207:18;;;;;;;;;;;;;;;;;;;;;;;;;:28;;;;7237:21;;;;;;;;;;;;;;;;::::0;7199:60:::1;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;7291:6;7270:9;:18;7280:7;7270:18;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;7338:7;7313:41;;;7347:6;7313:41;;;;;;:::i;:::-;;;;;;;;7116:245:::0;;:::o;1986:30::-;;;;;;;;;;;;;;;;;;;:::o;1543:20::-;;;;;;;;;;;;;:::o;1253:23::-;;;;:::o;1735:::-;;;;:::o;3406:389::-;2313:9;:21;2323:10;2313:21;;;;;;;;;;;;;;;;;;;;;;;;;:44;;;;2352:5;;;;;;;;;;;2338:19;;:10;:19;;;2313:44;2359:26;;;;;;;;;;;;;;;;;2305:81;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;3518:11:::1;:16;;;3507:7;:27;;:66;;;;3553:11;:20;;;3538:11;:35;;3507:66;3575:25;;;;;;;;;;;;;;;;::::0;3499:102:::1;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;3626:88;;;;;;;;3645:7;3626:88;;;;3664:11;3626:88;;;;3704:8;;3686:15;:26;;;;:::i;:::-;3626:88;;::::0;3612:11:::1;:102;;;;;;;;;;;;;;;;;;;;;;;;;;;3776:11;3767:7;3755:10;3730:58;;;;;;;;;;;;3406:389:::0;;:::o;1122:19::-;;;;:::o;3989:256::-;4061:1;4038:11;:19;;;:24;;4064:25;;;;;;;;;;;;;;;;;4030:60;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;4127:11;:19;;;4108:15;:38;;4148:30;;;;;;;;;;;;;;;;;4100:79;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;4190:48;4199:11;:16;;;4217:11;:20;;;4190:8;:48::i;:::-;3989:256::o;5001:750::-;5128:14;5182:1;5174:10;;5166:4;;:18;;5186:22;;;;;;;;;;;;;;;;;5158:51;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;5240:145;5284:5;;5291:4;;5341:7;5350:6;5358:9;5330:38;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;5320:49;;;;;;5307:63;;;;;;;;:::i;:::-;;;;;;;;;;;;;5297:74;;;;;;5240:26;:145::i;:::-;5399:34;;;;;;;;;;;;;;;;;5219:224;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;5474:7;:16;5482:7;5474:16;;;;;;;;;;;;;;;:24;5491:6;5474:24;;;;;;;;;;;;;;;;5462:9;:36;5500:27;;;;;;;;;;;;;;;;;5454:74;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;5560:7;:16;5568:7;5560:16;;;;;;;;;;;;;;;:24;5577:6;5560:24;;;;;;;;;;;;;;;;5548:9;:36;;;;:::i;:::-;5539:45;;5622:9;5595:7;:16;5603:7;5595:16;;;;;;;;;;;;;;;:24;5612:6;5595:24;;;;;;;;;;;;;;;:36;;;;5642:44;5670:7;5679:6;5649;5642:27;;;;:44;;;;;:::i;:::-;5729:6;5702:42;;5720:7;5702:42;;;5737:6;5702:42;;;;;;:::i;:::-;;;;;;;;5001:750;;;;;;;:::o;8089:123::-;8153:8;8145:5;;:16;;;;;;;;;;;;;;;;;;8196:8;8177:28;;;;;;;;;;;;8089:123;:::o;8269:141::-;8342:11;8331:8;:22;;;;8369:34;8391:11;8369:34;;;;;;:::i;:::-;;;;;;;;8269:141;:::o;7806:212::-;7888:7;7881:4;:14;;;;7916:11;7905:8;:22;;;;7945:11;;7938:18;;;;;;;;;;;;;;;;;;;;7999:11;7990:7;7972:39;;;;;;;;;;7806:212;;:::o;1411:172:27:-;1512:4;1572;1535:33;1556:5;;1563:4;1535:20;:33::i;:::-;:41;1528:48;;1411:172;;;;;;:::o;941:175:24:-;1023:86;1043:5;1073:23;;;1098:2;1102:5;1050:58;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1023:19;:86::i;:::-;941:175;;;:::o;2331:300:27:-;2424:7;2443:20;2466:4;2443:27;;2485:9;2480:116;2504:5;;:12;;2500:1;:16;2480:116;;;2552:33;2562:12;2576:5;;2582:1;2576:8;;;;;;;:::i;:::-;;;;;;;;2552:9;:33::i;:::-;2537:48;;2518:3;;;;;:::i;:::-;;;;2480:116;;;;2612:12;2605:19;;;2331:300;;;;;:::o;5173:642:24:-;5592:23;5618:69;5646:4;5618:69;;;;;;;;;;;;;;;;;5626:5;5618:27;;;;:69;;;;;:::i;:::-;5592:95;;5726:1;5705:10;:17;:22;:56;;;;5742:10;5731:30;;;;;;;;;;;;:::i;:::-;5705:56;5697:111;;;;;;;;;;;;:::i;:::-;;;;;;;;;5243:572;5173:642;;:::o;9205:147:27:-;9268:7;9298:1;9294;:5;:51;;9325:20;9340:1;9343;9325:14;:20::i;:::-;9294:51;;;9302:20;9317:1;9320;9302:14;:20::i;:::-;9294:51;9287:58;;9205:147;;;;:::o;4108:223:25:-;4241:12;4272:52;4294:6;4302:4;4308:1;4311:12;4272:21;:52::i;:::-;4265:59;;4108:223;;;;;:::o;9358:261:27:-;9426:13;9530:1;9524:4;9517:15;9558:1;9552:4;9545:15;9598:4;9592;9582:21;9573:30;;9358:261;;;;:::o;5165:446:25:-;5330:12;5387:5;5362:21;:30;;5354:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;5446:12;5460:23;5487:6;:11;;5506:5;5513:4;5487:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5445:73;;;;5535:69;5562:6;5570:7;5579:10;5591:12;5535:26;:69::i;:::-;5528:76;;;;5165:446;;;;;;:::o;7671:628::-;7851:12;7879:7;7875:418;;;7927:1;7906:10;:17;:22;7902:286;;8121:18;8132:6;8121:10;:18::i;:::-;8113:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;7902:286;8208:10;8201:17;;;;7875:418;8249:33;8257:10;8269:12;8249:7;:33::i;:::-;7671:628;;;;;;;:::o;1412:320::-;1472:4;1724:1;1702:7;:19;;;:23;1695:30;;1412:320;;;:::o;8821:540::-;9000:1;8980:10;:17;:21;8976:379;;;9208:10;9202:17;9264:15;9251:10;9247:2;9243:19;9236:44;8976:379;9331:12;9324:20;;;;;;;;;;;:::i;:::-;;;;;;;;88:117:36;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:474::-;909:6;917;966:2;954:9;945:7;941:23;937:32;934:119;;;972:79;;:::i;:::-;934:119;1092:1;1117:53;1162:7;1153:6;1142:9;1138:22;1117:53;:::i;:::-;1107:63;;1063:117;1219:2;1245:53;1290:7;1281:6;1270:9;1266:22;1245:53;:::i;:::-;1235:63;;1190:118;841:474;;;;;:::o;1321:77::-;1358:7;1387:5;1376:16;;1321:77;;;:::o;1404:118::-;1491:24;1509:5;1491:24;:::i;:::-;1486:3;1479:37;1404:118;;:::o;1528:222::-;1621:4;1659:2;1648:9;1644:18;1636:26;;1672:71;1740:1;1729:9;1725:17;1716:6;1672:71;:::i;:::-;1528:222;;;;:::o;1756:329::-;1815:6;1864:2;1852:9;1843:7;1839:23;1835:32;1832:119;;;1870:79;;:::i;:::-;1832:119;1990:1;2015:53;2060:7;2051:6;2040:9;2036:22;2015:53;:::i;:::-;2005:63;;1961:117;1756:329;;;;:::o;2091:122::-;2164:24;2182:5;2164:24;:::i;:::-;2157:5;2154:35;2144:63;;2203:1;2200;2193:12;2144:63;2091:122;:::o;2219:139::-;2265:5;2303:6;2290:20;2281:29;;2319:33;2346:5;2319:33;:::i;:::-;2219:139;;;;:::o;2364:329::-;2423:6;2472:2;2460:9;2451:7;2447:23;2443:32;2440:119;;;2478:79;;:::i;:::-;2440:119;2598:1;2623:53;2668:7;2659:6;2648:9;2644:22;2623:53;:::i;:::-;2613:63;;2569:117;2364:329;;;;:::o;2699:77::-;2736:7;2765:5;2754:16;;2699:77;;;:::o;2782:122::-;2855:24;2873:5;2855:24;:::i;:::-;2848:5;2845:35;2835:63;;2894:1;2891;2884:12;2835:63;2782:122;:::o;2910:139::-;2956:5;2994:6;2981:20;2972:29;;3010:33;3037:5;3010:33;:::i;:::-;2910:139;;;;:::o;3055:474::-;3123:6;3131;3180:2;3168:9;3159:7;3155:23;3151:32;3148:119;;;3186:79;;:::i;:::-;3148:119;3306:1;3331:53;3376:7;3367:6;3356:9;3352:22;3331:53;:::i;:::-;3321:63;;3277:117;3433:2;3459:53;3504:7;3495:6;3484:9;3480:22;3459:53;:::i;:::-;3449:63;;3404:118;3055:474;;;;;:::o;3535:90::-;3569:7;3612:5;3605:13;3598:21;3587:32;;3535:90;;;:::o;3631:109::-;3712:21;3727:5;3712:21;:::i;:::-;3707:3;3700:34;3631:109;;:::o;3746:210::-;3833:4;3871:2;3860:9;3856:18;3848:26;;3884:65;3946:1;3935:9;3931:17;3922:6;3884:65;:::i;:::-;3746:210;;;;:::o;3962:116::-;4032:21;4047:5;4032:21;:::i;:::-;4025:5;4022:32;4012:60;;4068:1;4065;4058:12;4012:60;3962:116;:::o;4084:133::-;4127:5;4165:6;4152:20;4143:29;;4181:30;4205:5;4181:30;:::i;:::-;4084:133;;;;:::o;4223:468::-;4288:6;4296;4345:2;4333:9;4324:7;4320:23;4316:32;4313:119;;;4351:79;;:::i;:::-;4313:119;4471:1;4496:53;4541:7;4532:6;4521:9;4517:22;4496:53;:::i;:::-;4486:63;;4442:117;4598:2;4624:50;4666:7;4657:6;4646:9;4642:22;4624:50;:::i;:::-;4614:60;;4569:115;4223:468;;;;;:::o;4697:118::-;4784:24;4802:5;4784:24;:::i;:::-;4779:3;4772:37;4697:118;;:::o;4821:442::-;4970:4;5008:2;4997:9;4993:18;4985:26;;5021:71;5089:1;5078:9;5074:17;5065:6;5021:71;:::i;:::-;5102:72;5170:2;5159:9;5155:18;5146:6;5102:72;:::i;:::-;5184;5252:2;5241:9;5237:18;5228:6;5184:72;:::i;:::-;4821:442;;;;;;:::o;5269:118::-;5356:24;5374:5;5356:24;:::i;:::-;5351:3;5344:37;5269:118;;:::o;5393:222::-;5486:4;5524:2;5513:9;5509:18;5501:26;;5537:71;5605:1;5594:9;5590:17;5581:6;5537:71;:::i;:::-;5393:222;;;;:::o;5621:::-;5714:4;5752:2;5741:9;5737:18;5729:26;;5765:71;5833:1;5822:9;5818:17;5809:6;5765:71;:::i;:::-;5621:222;;;;:::o;5849:117::-;5958:1;5955;5948:12;5972:117;6081:1;6078;6071:12;6095:117;6204:1;6201;6194:12;6235:568;6308:8;6318:6;6368:3;6361:4;6353:6;6349:17;6345:27;6335:122;;6376:79;;:::i;:::-;6335:122;6489:6;6476:20;6466:30;;6519:18;6511:6;6508:30;6505:117;;;6541:79;;:::i;:::-;6505:117;6655:4;6647:6;6643:17;6631:29;;6709:3;6701:4;6693:6;6689:17;6679:8;6675:32;6672:41;6669:128;;;6716:79;;:::i;:::-;6669:128;6235:568;;;;;:::o;6809:995::-;6922:6;6930;6938;6946;6954;7003:3;6991:9;6982:7;6978:23;6974:33;6971:120;;;7010:79;;:::i;:::-;6971:120;7130:1;7155:53;7200:7;7191:6;7180:9;7176:22;7155:53;:::i;:::-;7145:63;;7101:117;7257:2;7283:53;7328:7;7319:6;7308:9;7304:22;7283:53;:::i;:::-;7273:63;;7228:118;7385:2;7411:53;7456:7;7447:6;7436:9;7432:22;7411:53;:::i;:::-;7401:63;;7356:118;7541:2;7530:9;7526:18;7513:32;7572:18;7564:6;7561:30;7558:117;;;7594:79;;:::i;:::-;7558:117;7707:80;7779:7;7770:6;7759:9;7755:22;7707:80;:::i;:::-;7689:98;;;;7484:313;6809:995;;;;;;;;:::o;7810:99::-;7862:6;7896:5;7890:12;7880:22;;7810:99;;;:::o;7915:169::-;7999:11;8033:6;8028:3;8021:19;8073:4;8068:3;8064:14;8049:29;;7915:169;;;;:::o;8090:246::-;8171:1;8181:113;8195:6;8192:1;8189:13;8181:113;;;8280:1;8275:3;8271:11;8265:18;8261:1;8256:3;8252:11;8245:39;8217:2;8214:1;8210:10;8205:15;;8181:113;;;8328:1;8319:6;8314:3;8310:16;8303:27;8152:184;8090:246;;;:::o;8342:102::-;8383:6;8434:2;8430:7;8425:2;8418:5;8414:14;8410:28;8400:38;;8342:102;;;:::o;8450:377::-;8538:3;8566:39;8599:5;8566:39;:::i;:::-;8621:71;8685:6;8680:3;8621:71;:::i;:::-;8614:78;;8701:65;8759:6;8754:3;8747:4;8740:5;8736:16;8701:65;:::i;:::-;8791:29;8813:6;8791:29;:::i;:::-;8786:3;8782:39;8775:46;;8542:285;8450:377;;;;:::o;8833:313::-;8946:4;8984:2;8973:9;8969:18;8961:26;;9033:9;9027:4;9023:20;9019:1;9008:9;9004:17;8997:47;9061:78;9134:4;9125:6;9061:78;:::i;:::-;9053:86;;8833:313;;;;:::o;9152:180::-;9200:77;9197:1;9190:88;9297:4;9294:1;9287:15;9321:4;9318:1;9311:15;9338:191;9378:3;9397:20;9415:1;9397:20;:::i;:::-;9392:25;;9431:20;9449:1;9431:20;:::i;:::-;9426:25;;9474:1;9471;9467:9;9460:16;;9495:3;9492:1;9489:10;9486:36;;;9502:18;;:::i;:::-;9486:36;9338:191;;;;:::o;9535:442::-;9684:4;9722:2;9711:9;9707:18;9699:26;;9735:71;9803:1;9792:9;9788:17;9779:6;9735:71;:::i;:::-;9816:72;9884:2;9873:9;9869:18;9860:6;9816:72;:::i;:::-;9898;9966:2;9955:9;9951:18;9942:6;9898:72;:::i;:::-;9535:442;;;;;;:::o;9983:79::-;10022:7;10051:5;10040:16;;9983:79;;;:::o;10068:157::-;10173:45;10193:24;10211:5;10193:24;:::i;:::-;10173:45;:::i;:::-;10168:3;10161:58;10068:157;;:::o;10231:256::-;10343:3;10358:75;10429:3;10420:6;10358:75;:::i;:::-;10458:2;10453:3;10449:12;10442:19;;10478:3;10471:10;;10231:256;;;;:::o;10493:194::-;10533:4;10553:20;10571:1;10553:20;:::i;:::-;10548:25;;10587:20;10605:1;10587:20;:::i;:::-;10582:25;;10631:1;10628;10624:9;10616:17;;10655:1;10649:4;10646:11;10643:37;;;10660:18;;:::i;:::-;10643:37;10493:194;;;;:::o;10693:332::-;10814:4;10852:2;10841:9;10837:18;10829:26;;10865:71;10933:1;10922:9;10918:17;10909:6;10865:71;:::i;:::-;10946:72;11014:2;11003:9;10999:18;10990:6;10946:72;:::i;:::-;10693:332;;;;;:::o;11031:180::-;11079:77;11076:1;11069:88;11176:4;11173:1;11166:15;11200:4;11197:1;11190:15;11217:233;11256:3;11279:24;11297:5;11279:24;:::i;:::-;11270:33;;11325:66;11318:5;11315:77;11312:103;;11395:18;;:::i;:::-;11312:103;11442:1;11435:5;11431:13;11424:20;;11217:233;;;:::o;11456:137::-;11510:5;11541:6;11535:13;11526:22;;11557:30;11581:5;11557:30;:::i;:::-;11456:137;;;;:::o;11599:345::-;11666:6;11715:2;11703:9;11694:7;11690:23;11686:32;11683:119;;;11721:79;;:::i;:::-;11683:119;11841:1;11866:61;11919:7;11910:6;11899:9;11895:22;11866:61;:::i;:::-;11856:71;;11812:125;11599:345;;;;:::o;11950:229::-;12090:34;12086:1;12078:6;12074:14;12067:58;12159:12;12154:2;12146:6;12142:15;12135:37;11950:229;:::o;12185:366::-;12327:3;12348:67;12412:2;12407:3;12348:67;:::i;:::-;12341:74;;12424:93;12513:3;12424:93;:::i;:::-;12542:2;12537:3;12533:12;12526:19;;12185:366;;;:::o;12557:419::-;12723:4;12761:2;12750:9;12746:18;12738:26;;12810:9;12804:4;12800:20;12796:1;12785:9;12781:17;12774:47;12838:131;12964:4;12838:131;:::i;:::-;12830:139;;12557:419;;;:::o;12982:225::-;13122:34;13118:1;13110:6;13106:14;13099:58;13191:8;13186:2;13178:6;13174:15;13167:33;12982:225;:::o;13213:366::-;13355:3;13376:67;13440:2;13435:3;13376:67;:::i;:::-;13369:74;;13452:93;13541:3;13452:93;:::i;:::-;13570:2;13565:3;13561:12;13554:19;;13213:366;;;:::o;13585:419::-;13751:4;13789:2;13778:9;13774:18;13766:26;;13838:9;13832:4;13828:20;13824:1;13813:9;13809:17;13802:47;13866:131;13992:4;13866:131;:::i;:::-;13858:139;;13585:419;;;:::o;14010:98::-;14061:6;14095:5;14089:12;14079:22;;14010:98;;;:::o;14114:147::-;14215:11;14252:3;14237:18;;14114:147;;;;:::o;14267:386::-;14371:3;14399:38;14431:5;14399:38;:::i;:::-;14453:88;14534:6;14529:3;14453:88;:::i;:::-;14446:95;;14550:65;14608:6;14603:3;14596:4;14589:5;14585:16;14550:65;:::i;:::-;14640:6;14635:3;14631:16;14624:23;;14375:278;14267:386;;;;:::o;14659:271::-;14789:3;14811:93;14900:3;14891:6;14811:93;:::i;:::-;14804:100;;14921:3;14914:10;;14659:271;;;;:::o;14936:179::-;15076:31;15072:1;15064:6;15060:14;15053:55;14936:179;:::o;15121:366::-;15263:3;15284:67;15348:2;15343:3;15284:67;:::i;:::-;15277:74;;15360:93;15449:3;15360:93;:::i;:::-;15478:2;15473:3;15469:12;15462:19;;15121:366;;;:::o;15493:419::-;15659:4;15697:2;15686:9;15682:18;15674:26;;15746:9;15740:4;15736:20;15732:1;15721:9;15717:17;15710:47;15774:131;15900:4;15774:131;:::i;:::-;15766:139;;15493:419;;;:::o",
        linkReferences: {},
    },
    methodIdentifiers: {
        "acceptRoot()": "ed075ec5",
        "claim(address,address,uint256,bytes32[])": "fabed412",
        "claimed(address,address)": "0c9cbf0e",
        "ipfsHash()": "c623674f",
        "isUpdater(address)": "4fdfb086",
        "owner()": "8da5cb5b",
        "pendingRoot()": "750588cf",
        "revokePendingRoot()": "4b387053",
        "root()": "ebf0c717",
        "setOwner(address)": "13af4035",
        "setRoot(bytes32,bytes32)": "42af83fb",
        "setRootUpdater(address,bool)": "53739410",
        "setTimelock(uint256)": "1e891c0a",
        "submitRoot(bytes32,bytes32)": "d61825ef",
        "timelock()": "d33219b4",
    },
    rawMetadata:
        '{"compiler":{"version":"0.8.19+commit.7dd6d404"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"initialOwner","type":"address"},{"internalType":"uint256","name":"initialTimelock","type":"uint256"},{"internalType":"bytes32","name":"initialRoot","type":"bytes32"},{"internalType":"bytes32","name":"initialIpfsHash","type":"bytes32"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"acceptRoot","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"reward","type":"address"},{"internalType":"uint256","name":"claimable","type":"uint256"},{"internalType":"bytes32[]","name":"proof","type":"bytes32[]"}],"name":"claim","outputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"reward","type":"address"}],"name":"claimed","outputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"ipfsHash","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"isUpdater","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pendingRoot","outputs":[{"internalType":"bytes32","name":"root","type":"bytes32"},{"internalType":"bytes32","name":"ipfsHash","type":"bytes32"},{"internalType":"uint256","name":"validAt","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"revokePendingRoot","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"root","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"setOwner","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"newRoot","type":"bytes32"},{"internalType":"bytes32","name":"newIpfsHash","type":"bytes32"}],"name":"setRoot","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"updater","type":"address"},{"internalType":"bool","name":"active","type":"bool"}],"name":"setRootUpdater","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"newTimelock","type":"uint256"}],"name":"setTimelock","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"newRoot","type":"bytes32"},{"internalType":"bytes32","name":"newIpfsHash","type":"bytes32"}],"name":"submitRoot","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"timelock","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"devdoc":{"author":"Morpho Labs","custom:contact":"security@morpho.org","kind":"dev","methods":{"acceptRoot()":{"details":"This function can only be called after the timelock has expired.Anyone can call this function."},"claim(address,address,uint256,bytes32[])":{"details":"Anyone can claim rewards on behalf of an account.","params":{"account":"The address to claim rewards for.","claimable":"The overall claimable amount of token rewards.","proof":"The merkle proof that validates this claim.","reward":"The address of the reward token."},"returns":{"amount":"The amount of reward token claimed."}},"constructor":{"details":"Warning: The `initialIpfsHash` might not correspond to the `initialRoot`.","params":{"initialIpfsHash":"The optional ipfs hash containing metadata about the root (e.g. the merkle tree itself).","initialOwner":"The initial owner of the contract.","initialRoot":"The initial merkle root.","initialTimelock":"The initial timelock of the contract."}},"revokePendingRoot()":{"details":"Can be frontrunned with `acceptRoot` in case the timelock has passed."},"setRoot(bytes32,bytes32)":{"details":"This function can only be called by the owner of the distribution or by updaters if there is no timelock.Set to bytes32(0) to remove the root.","params":{"newIpfsHash":"The optional ipfs hash containing metadata about the root (e.g. the merkle tree itself).","newRoot":"The new merkle root."}},"setRootUpdater(address,bool)":{"params":{"active":"Whether the root updater should be active or not.","updater":"The address of the root updater."}},"setTimelock(uint256)":{"details":"This function can only be called by the owner of the distribution.The timelock modification are not applicable to the pending values.","params":{"newTimelock":"The new timelock."}},"submitRoot(bytes32,bytes32)":{"details":"Warning: The `newIpfsHash` might not correspond to the `newRoot`.","params":{"newIpfsHash":"The optional ipfs hash containing metadata about the root (e.g. the merkle tree itself).","newRoot":"The new merkle root."}}},"stateVariables":{"pendingRoot":{"details":"If the pending root is set, the root can be updated after the timelock has expired.The pending root is skipped if the timelock is set to 0."}},"title":"UniversalRewardsDistributor","version":1},"userdoc":{"kind":"user","methods":{"acceptRoot()":{"notice":"Accepts and sets the current pending merkle root."},"claim(address,address,uint256,bytes32[])":{"notice":"Claims rewards."},"claimed(address,address)":{"notice":"The `amount` of `reward` token already claimed by `account`."},"constructor":{"notice":"Initializes the contract."},"ipfsHash()":{"notice":"The optional ipfs hash containing metadata about the root (e.g. the merkle tree itself)."},"isUpdater(address)":{"notice":"The addresses that can update the merkle root."},"owner()":{"notice":"The address that can update the distribution parameters, and freeze a root."},"pendingRoot()":{"notice":"The pending root of the distribution."},"revokePendingRoot()":{"notice":"Revokes the pending root."},"root()":{"notice":"The merkle root of this distribution."},"setOwner(address)":{"notice":"Sets the `owner` of the distribution to `newOwner`."},"setRoot(bytes32,bytes32)":{"notice":"Forces update the root of a given distribution (bypassing the timelock)."},"setRootUpdater(address,bool)":{"notice":"Sets the root updater of a given distribution."},"setTimelock(uint256)":{"notice":"Sets the timelock of a given distribution."},"submitRoot(bytes32,bytes32)":{"notice":"Submits a new merkle root."},"timelock()":{"notice":"The timelock related to root updates."}},"notice":"This contract enables the distribution of various reward tokens to multiple accounts using different permissionless Merkle trees. It is largely inspired by Morpho\'s current rewards distributor: https://github.com/morpho-dao/morpho-v1/blob/main/src/common/rewards-distribution/RewardsDistributor.sol","version":1}},"settings":{"compilationTarget":{"lib/universal-rewards-distributor/src/UniversalRewardsDistributor.sol":"UniversalRewardsDistributor"},"evmVersion":"paris","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":false,"runs":200},"remappings":[":ds-test/=lib/universal-rewards-distributor/lib/forge-std/lib/ds-test/src/",":erc4626-tests/=lib/universal-rewards-distributor/lib/openzeppelin-contracts/lib/erc4626-tests/",":forge-std/=lib/forge-std/src/",":murky/=lib/universal-rewards-distributor/lib/murky/src/",":openzeppelin-contracts/=lib/universal-rewards-distributor/lib/openzeppelin-contracts/",":openzeppelin/=lib/universal-rewards-distributor/lib/openzeppelin-contracts/contracts/",":universal-rewards-distributor/=lib/universal-rewards-distributor/"]},"sources":{"lib/universal-rewards-distributor/lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol":{"keccak256":"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305","license":"MIT","urls":["bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5","dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"]},"lib/universal-rewards-distributor/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol":{"keccak256":"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a","license":"MIT","urls":["bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a","dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv"]},"lib/universal-rewards-distributor/lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol":{"keccak256":"0x909d608c2db6eb165ca178c81289a07ed2e118e444d0025b2a85c97d0b44a4fa","license":"MIT","urls":["bzz-raw://656cda26512ddd7373c2d5551c8fae759fc30f05b10f0fc2e738e9274199dbd4","dweb:/ipfs/QmTSArSzQRFbQmHgq7U1PZXnsDFhvDZhKVu9CzMG4yo6Lx"]},"lib/universal-rewards-distributor/lib/openzeppelin-contracts/contracts/utils/Address.sol":{"keccak256":"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa","license":"MIT","urls":["bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931","dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm"]},"lib/universal-rewards-distributor/lib/openzeppelin-contracts/contracts/utils/cryptography/MerkleProof.sol":{"keccak256":"0xcf688741f79f4838d5301dcf72d0af9eff11bbab6ab0bb112ad144c7fb672dac","license":"MIT","urls":["bzz-raw://85d9c87a481fe99fd28a146c205da0867ef7e1b7edbe0036abc86d2e64eb1f04","dweb:/ipfs/QmR7m1zWQNfZHUKTtqnjoCjCBbNFcjCxV27rxf6iMfhVtG"]},"lib/universal-rewards-distributor/src/UniversalRewardsDistributor.sol":{"keccak256":"0xee7ffa41d0fe9a42e47c76e8b800e9e43504bb406d0791a12e1d69597dc32a62","license":"GPL-2.0-or-later","urls":["bzz-raw://485092efb74841d613f3775957c033bbca24ef3e5e64d41d036a72e98efda719","dweb:/ipfs/QmPRon1C1cH746x59Wy1P3AiHJvADp41AQu2ArXECmU1Tg"]},"lib/universal-rewards-distributor/src/interfaces/IUniversalRewardsDistributor.sol":{"keccak256":"0x03f58682e8f27880f7156623a2f56e624dd711385c989c13d483687ab5fe6be8","license":"GPL-2.0-or-later","urls":["bzz-raw://4b679ccb42d3247dfcdabbfd157affe4dd18b89c5742e91128ddde8f27715f56","dweb:/ipfs/QmURv39WTah4EWreUTu7vn4FynJ14GVmNNmnfbU7zyjYdX"]},"lib/universal-rewards-distributor/src/libraries/ErrorsLib.sol":{"keccak256":"0x065ee8e1135300354cc191f80aa54595ec73db664822fd0e158bd7f214d4c301","license":"GPL-2.0-or-later","urls":["bzz-raw://6569d30c9d16d9236eb4f4d93cb3d8f7e68bd19b766370e04cc79469f5b81542","dweb:/ipfs/QmQUVpJ6Pmic3Qefn7BytyUR4D6jNtoQF8PmtHD1yhWJ5h"]},"lib/universal-rewards-distributor/src/libraries/EventsLib.sol":{"keccak256":"0xe17fc27628aad5c32ff40fb3695d8aab9dd7b002de6e707cc0f0eb7874279164","license":"GPL-2.0-or-later","urls":["bzz-raw://cfbc293e794b2fe5535280deb572c2380e7f70eded3cdff8ca7170914131e47c","dweb:/ipfs/QmSTZidauWsysMyhrMswZyfsRMQyb2fivLMZjaFPF8NGEW"]}},"version":1}',
    metadata: {
        compiler: { version: "0.8.19+commit.7dd6d404" },
        language: "Solidity",
        output: {
            abi: [
                {
                    inputs: [
                        {
                            internalType: "address",
                            name: "initialOwner",
                            type: "address",
                        },
                        {
                            internalType: "uint256",
                            name: "initialTimelock",
                            type: "uint256",
                        },
                        {
                            internalType: "bytes32",
                            name: "initialRoot",
                            type: "bytes32",
                        },
                        {
                            internalType: "bytes32",
                            name: "initialIpfsHash",
                            type: "bytes32",
                        },
                    ],
                    stateMutability: "nonpayable",
                    type: "constructor",
                },
                {
                    inputs: [],
                    stateMutability: "nonpayable",
                    type: "function",
                    name: "acceptRoot",
                },
                {
                    inputs: [
                        {
                            internalType: "address",
                            name: "account",
                            type: "address",
                        },
                        {
                            internalType: "address",
                            name: "reward",
                            type: "address",
                        },
                        {
                            internalType: "uint256",
                            name: "claimable",
                            type: "uint256",
                        },
                        {
                            internalType: "bytes32[]",
                            name: "proof",
                            type: "bytes32[]",
                        },
                    ],
                    stateMutability: "nonpayable",
                    type: "function",
                    name: "claim",
                    outputs: [
                        {
                            internalType: "uint256",
                            name: "amount",
                            type: "uint256",
                        },
                    ],
                },
                {
                    inputs: [
                        {
                            internalType: "address",
                            name: "account",
                            type: "address",
                        },
                        {
                            internalType: "address",
                            name: "reward",
                            type: "address",
                        },
                    ],
                    stateMutability: "view",
                    type: "function",
                    name: "claimed",
                    outputs: [
                        {
                            internalType: "uint256",
                            name: "amount",
                            type: "uint256",
                        },
                    ],
                },
                {
                    inputs: [],
                    stateMutability: "view",
                    type: "function",
                    name: "ipfsHash",
                    outputs: [
                        { internalType: "bytes32", name: "", type: "bytes32" },
                    ],
                },
                {
                    inputs: [
                        { internalType: "address", name: "", type: "address" },
                    ],
                    stateMutability: "view",
                    type: "function",
                    name: "isUpdater",
                    outputs: [{ internalType: "bool", name: "", type: "bool" }],
                },
                {
                    inputs: [],
                    stateMutability: "view",
                    type: "function",
                    name: "owner",
                    outputs: [
                        { internalType: "address", name: "", type: "address" },
                    ],
                },
                {
                    inputs: [],
                    stateMutability: "view",
                    type: "function",
                    name: "pendingRoot",
                    outputs: [
                        {
                            internalType: "bytes32",
                            name: "root",
                            type: "bytes32",
                        },
                        {
                            internalType: "bytes32",
                            name: "ipfsHash",
                            type: "bytes32",
                        },
                        {
                            internalType: "uint256",
                            name: "validAt",
                            type: "uint256",
                        },
                    ],
                },
                {
                    inputs: [],
                    stateMutability: "nonpayable",
                    type: "function",
                    name: "revokePendingRoot",
                },
                {
                    inputs: [],
                    stateMutability: "view",
                    type: "function",
                    name: "root",
                    outputs: [
                        { internalType: "bytes32", name: "", type: "bytes32" },
                    ],
                },
                {
                    inputs: [
                        {
                            internalType: "address",
                            name: "newOwner",
                            type: "address",
                        },
                    ],
                    stateMutability: "nonpayable",
                    type: "function",
                    name: "setOwner",
                },
                {
                    inputs: [
                        {
                            internalType: "bytes32",
                            name: "newRoot",
                            type: "bytes32",
                        },
                        {
                            internalType: "bytes32",
                            name: "newIpfsHash",
                            type: "bytes32",
                        },
                    ],
                    stateMutability: "nonpayable",
                    type: "function",
                    name: "setRoot",
                },
                {
                    inputs: [
                        {
                            internalType: "address",
                            name: "updater",
                            type: "address",
                        },
                        { internalType: "bool", name: "active", type: "bool" },
                    ],
                    stateMutability: "nonpayable",
                    type: "function",
                    name: "setRootUpdater",
                },
                {
                    inputs: [
                        {
                            internalType: "uint256",
                            name: "newTimelock",
                            type: "uint256",
                        },
                    ],
                    stateMutability: "nonpayable",
                    type: "function",
                    name: "setTimelock",
                },
                {
                    inputs: [
                        {
                            internalType: "bytes32",
                            name: "newRoot",
                            type: "bytes32",
                        },
                        {
                            internalType: "bytes32",
                            name: "newIpfsHash",
                            type: "bytes32",
                        },
                    ],
                    stateMutability: "nonpayable",
                    type: "function",
                    name: "submitRoot",
                },
                {
                    inputs: [],
                    stateMutability: "view",
                    type: "function",
                    name: "timelock",
                    outputs: [
                        { internalType: "uint256", name: "", type: "uint256" },
                    ],
                },
            ],
            devdoc: {
                kind: "dev",
                methods: {
                    "acceptRoot()": {
                        details:
                            "This function can only be called after the timelock has expired.Anyone can call this function.",
                    },
                    "claim(address,address,uint256,bytes32[])": {
                        details:
                            "Anyone can claim rewards on behalf of an account.",
                        params: {
                            account: "The address to claim rewards for.",
                            claimable:
                                "The overall claimable amount of token rewards.",
                            proof: "The merkle proof that validates this claim.",
                            reward: "The address of the reward token.",
                        },
                        returns: {
                            amount: "The amount of reward token claimed.",
                        },
                    },
                    constructor: {
                        details:
                            "Warning: The `initialIpfsHash` might not correspond to the `initialRoot`.",
                        params: {
                            initialIpfsHash:
                                "The optional ipfs hash containing metadata about the root (e.g. the merkle tree itself).",
                            initialOwner: "The initial owner of the contract.",
                            initialRoot: "The initial merkle root.",
                            initialTimelock:
                                "The initial timelock of the contract.",
                        },
                    },
                    "revokePendingRoot()": {
                        details:
                            "Can be frontrunned with `acceptRoot` in case the timelock has passed.",
                    },
                    "setRoot(bytes32,bytes32)": {
                        details:
                            "This function can only be called by the owner of the distribution or by updaters if there is no timelock.Set to bytes32(0) to remove the root.",
                        params: {
                            newIpfsHash:
                                "The optional ipfs hash containing metadata about the root (e.g. the merkle tree itself).",
                            newRoot: "The new merkle root.",
                        },
                    },
                    "setRootUpdater(address,bool)": {
                        params: {
                            active: "Whether the root updater should be active or not.",
                            updater: "The address of the root updater.",
                        },
                    },
                    "setTimelock(uint256)": {
                        details:
                            "This function can only be called by the owner of the distribution.The timelock modification are not applicable to the pending values.",
                        params: { newTimelock: "The new timelock." },
                    },
                    "submitRoot(bytes32,bytes32)": {
                        details:
                            "Warning: The `newIpfsHash` might not correspond to the `newRoot`.",
                        params: {
                            newIpfsHash:
                                "The optional ipfs hash containing metadata about the root (e.g. the merkle tree itself).",
                            newRoot: "The new merkle root.",
                        },
                    },
                },
                version: 1,
            },
            userdoc: {
                kind: "user",
                methods: {
                    "acceptRoot()": {
                        notice: "Accepts and sets the current pending merkle root.",
                    },
                    "claim(address,address,uint256,bytes32[])": {
                        notice: "Claims rewards.",
                    },
                    "claimed(address,address)": {
                        notice: "The `amount` of `reward` token already claimed by `account`.",
                    },
                    constructor: { notice: "Initializes the contract." },
                    "ipfsHash()": {
                        notice: "The optional ipfs hash containing metadata about the root (e.g. the merkle tree itself).",
                    },
                    "isUpdater(address)": {
                        notice: "The addresses that can update the merkle root.",
                    },
                    "owner()": {
                        notice: "The address that can update the distribution parameters, and freeze a root.",
                    },
                    "pendingRoot()": {
                        notice: "The pending root of the distribution.",
                    },
                    "revokePendingRoot()": {
                        notice: "Revokes the pending root.",
                    },
                    "root()": {
                        notice: "The merkle root of this distribution.",
                    },
                    "setOwner(address)": {
                        notice: "Sets the `owner` of the distribution to `newOwner`.",
                    },
                    "setRoot(bytes32,bytes32)": {
                        notice: "Forces update the root of a given distribution (bypassing the timelock).",
                    },
                    "setRootUpdater(address,bool)": {
                        notice: "Sets the root updater of a given distribution.",
                    },
                    "setTimelock(uint256)": {
                        notice: "Sets the timelock of a given distribution.",
                    },
                    "submitRoot(bytes32,bytes32)": {
                        notice: "Submits a new merkle root.",
                    },
                    "timelock()": {
                        notice: "The timelock related to root updates.",
                    },
                },
                version: 1,
            },
        },
        settings: {
            remappings: [
                "ds-test/=lib/universal-rewards-distributor/lib/forge-std/lib/ds-test/src/",
                "erc4626-tests/=lib/universal-rewards-distributor/lib/openzeppelin-contracts/lib/erc4626-tests/",
                "forge-std/=lib/forge-std/src/",
                "murky/=lib/universal-rewards-distributor/lib/murky/src/",
                "openzeppelin-contracts/=lib/universal-rewards-distributor/lib/openzeppelin-contracts/",
                "openzeppelin/=lib/universal-rewards-distributor/lib/openzeppelin-contracts/contracts/",
                "universal-rewards-distributor/=lib/universal-rewards-distributor/",
            ],
            optimizer: { enabled: false, runs: 200 },
            metadata: { bytecodeHash: "ipfs" },
            compilationTarget: {
                "lib/universal-rewards-distributor/src/UniversalRewardsDistributor.sol":
                    "UniversalRewardsDistributor",
            },
            evmVersion: "paris",
            libraries: {},
        },
        sources: {
            "lib/universal-rewards-distributor/lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol":
                {
                    keccak256:
                        "0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305",
                    urls: [
                        "bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5",
                        "dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53",
                    ],
                    license: "MIT",
                },
            "lib/universal-rewards-distributor/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol":
                {
                    keccak256:
                        "0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a",
                    urls: [
                        "bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a",
                        "dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv",
                    ],
                    license: "MIT",
                },
            "lib/universal-rewards-distributor/lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol":
                {
                    keccak256:
                        "0x909d608c2db6eb165ca178c81289a07ed2e118e444d0025b2a85c97d0b44a4fa",
                    urls: [
                        "bzz-raw://656cda26512ddd7373c2d5551c8fae759fc30f05b10f0fc2e738e9274199dbd4",
                        "dweb:/ipfs/QmTSArSzQRFbQmHgq7U1PZXnsDFhvDZhKVu9CzMG4yo6Lx",
                    ],
                    license: "MIT",
                },
            "lib/universal-rewards-distributor/lib/openzeppelin-contracts/contracts/utils/Address.sol":
                {
                    keccak256:
                        "0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa",
                    urls: [
                        "bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931",
                        "dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm",
                    ],
                    license: "MIT",
                },
            "lib/universal-rewards-distributor/lib/openzeppelin-contracts/contracts/utils/cryptography/MerkleProof.sol":
                {
                    keccak256:
                        "0xcf688741f79f4838d5301dcf72d0af9eff11bbab6ab0bb112ad144c7fb672dac",
                    urls: [
                        "bzz-raw://85d9c87a481fe99fd28a146c205da0867ef7e1b7edbe0036abc86d2e64eb1f04",
                        "dweb:/ipfs/QmR7m1zWQNfZHUKTtqnjoCjCBbNFcjCxV27rxf6iMfhVtG",
                    ],
                    license: "MIT",
                },
            "lib/universal-rewards-distributor/src/UniversalRewardsDistributor.sol":
                {
                    keccak256:
                        "0xee7ffa41d0fe9a42e47c76e8b800e9e43504bb406d0791a12e1d69597dc32a62",
                    urls: [
                        "bzz-raw://485092efb74841d613f3775957c033bbca24ef3e5e64d41d036a72e98efda719",
                        "dweb:/ipfs/QmPRon1C1cH746x59Wy1P3AiHJvADp41AQu2ArXECmU1Tg",
                    ],
                    license: "GPL-2.0-or-later",
                },
            "lib/universal-rewards-distributor/src/interfaces/IUniversalRewardsDistributor.sol":
                {
                    keccak256:
                        "0x03f58682e8f27880f7156623a2f56e624dd711385c989c13d483687ab5fe6be8",
                    urls: [
                        "bzz-raw://4b679ccb42d3247dfcdabbfd157affe4dd18b89c5742e91128ddde8f27715f56",
                        "dweb:/ipfs/QmURv39WTah4EWreUTu7vn4FynJ14GVmNNmnfbU7zyjYdX",
                    ],
                    license: "GPL-2.0-or-later",
                },
            "lib/universal-rewards-distributor/src/libraries/ErrorsLib.sol": {
                keccak256:
                    "0x065ee8e1135300354cc191f80aa54595ec73db664822fd0e158bd7f214d4c301",
                urls: [
                    "bzz-raw://6569d30c9d16d9236eb4f4d93cb3d8f7e68bd19b766370e04cc79469f5b81542",
                    "dweb:/ipfs/QmQUVpJ6Pmic3Qefn7BytyUR4D6jNtoQF8PmtHD1yhWJ5h",
                ],
                license: "GPL-2.0-or-later",
            },
            "lib/universal-rewards-distributor/src/libraries/EventsLib.sol": {
                keccak256:
                    "0xe17fc27628aad5c32ff40fb3695d8aab9dd7b002de6e707cc0f0eb7874279164",
                urls: [
                    "bzz-raw://cfbc293e794b2fe5535280deb572c2380e7f70eded3cdff8ca7170914131e47c",
                    "dweb:/ipfs/QmSTZidauWsysMyhrMswZyfsRMQyb2fivLMZjaFPF8NGEW",
                ],
                license: "GPL-2.0-or-later",
            },
        },
        version: 1,
    },
    id: 30,
} as const;
